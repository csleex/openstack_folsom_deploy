{"google":"UA-30563095-3","tagline":"OpenStack Folsom bootstrap script for Ubuntu Server 12.04 LTS","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Openstack folsom deploy","body":"OpenStack Folsom Bootstrap Script\r\n=======================\r\n\r\nOpenStack Folsom Bootstrap Script for Ubuntu Server\r\n\r\nAuthor\r\n----\r\nTomokazu Hirai @jedipunkz\r\n\r\nTwitter : <https://twitter.com/jedipunkz>\r\nBlog    : <http://jedipunkz.github.com>\r\n\r\nNotice\r\n----\r\n\r\nThis script was tested 'all in one mode' and '3 nodes mode (controller, network, compute).\r\nNow I'm developing for separated compornent nodes mode. Please wait a moment :D or\r\nfeel FREE for your fork.\r\n\r\nMotivation\r\n----\r\n\r\ndevstack is very usefull for me. I am using devstack for understanding\r\nopenstack and especially Quantum ! ;) but when I reboot devstack node, all of\r\nopenstack compornents was not booted. That is not good for me. and I wanted to\r\nuse Ubuntu Cloud Archive packages.\r\n\r\nPremise Environment\r\n----\r\n\r\nYou need 1 or more node(s) with Ubuntu Server 12.04 LTS / 12.10.\r\n\r\nYou should have a machine with 3 NICs. eth0 is public network interface. eth1\r\nis VM (data) network interface, this will be used for communication to other\r\nVMs on other compute nodes. eth2 is completely for management.\r\n\r\nQuantum was designed based on 4 networks, public/data/management/api. This script\r\ndesigned based on 3 networks (if you want 4 networks, you can do it with this).\r\npublic/data/management & api. All of APIs will be listening on management networks\r\ninterface.\r\n\r\n    management segment 172.16.1.0/24\r\n    +--------------------------------------------+------------------+-----------------\r\n    |                                            |                  |\r\n    |                                            |                  |\r\n    | eth2 172.16.1.13                           | eth2 172.16.1.12 | eth2 172.24.1.11\r\n    +------------+                               +-----------+      +------------+\r\n    |            | eth1 ------------------- eth1 |           |      |            |\r\n    |  network   | vlan/gre seg = 172.24.17.0/24 |  compute  |      | controller |\r\n    |    node    | data segment = 172.16.2.0/24  |   node    |      |    node    |\r\n    +------------+ 172.16.2.13       172.16.2.12 +-----------+      +------------+\r\n    | eth0 10.200.8.13                                              | eth0 10.200.8.11\r\n    |                                                               |\r\n    |                                                               |\r\n    +--------------------------------------------+------------------+-----------------\r\n    |       public segment 10.200.8.0/24\r\n    |\r\n    | 10.200.8.1\r\n    +-----------+\r\n    | GW Router |-> The Internet\r\n    +-----------+\r\n\r\nso you should setup each NICs like this. this is /etc/network/interface\r\n\r\n\r\nYou can install and manage openstack via eth2 NiC. When you run this script,\r\nopenvswitch will adding eth0 and eth1 for bridge interfaces.\r\n\r\n    auto lo\r\n    iface lo inet loopback\r\n\r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        down ifconfig $IFACE down\r\n        address 10.200.8.11\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 172.16.2.11\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.11\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n\r\nand Especialy you need to have a disk device for cinder such as /dev/sda6.\r\n\r\nHow to use (all in one mode)\r\n----\r\n\r\nget script to your target.\r\n\r\n    % git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n    % cd openstack_folsom_deploy\r\n\r\nUpdate these environment in deploy.conf\r\n\r\n    # for all in one mode\r\n    HOST_IP='172.16.1.11'\r\n    # controller node\r\n    CONTROLLER_NODE_IP='172.16.1.11'\r\n    # network node\r\n    NETWORK_NODE_IP='172.16.1.13'\r\n    # compute node\r\n    COMPUTE_NODE_IP='172.16.1.12'\r\n    DATA_NIC_COMPUTE='eth1'\r\n    # etc env\r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    DATA_NIC='eth1'\r\n    PUBLIC_NIC='eth0'\r\n    # network_type : gre or vlan\r\n    NETWORK_TYPE='gre'\r\n    \r\n    # quantun env\r\n    INT_NET_GATEWAY='172.24.17.254'\r\n    INT_NET_RANGE='172.24.17.0/24'\r\n    EXT_NET_GATEWAY='10.200.8.1'\r\n    EXT_NET_START='10.200.8.36'\r\n    EXT_NET_END='10.200.8.40'\r\n    EXT_NET_RANGE='10.200.8.0/24'\r\n\r\nRun this script.\r\n\r\n\t% sudo ./deploy.sh allinone\r\n\r\nThat's all and You've done :D\r\n\r\nNow you can create and boot VMs on Horizon (http://${HOST_IP}/horizon)  with user: demo, pass: demo.\r\n\r\nHow to user : 3 nodes (controller, network, compute) mode\r\n----\r\n\r\nIf you have a plan to build separated by function (controller, network,\r\ncompute nodes), please run deploy.sh with 'controller', 'network', 'compute' option.\r\nParameters of deploy.conf must be same as controller's one.\r\n\r\n    controller% git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n\r\nupdate parameters of deploy.conf.\r\n\r\n    # for all in one mode\r\n    HOST_IP='172.16.1.11'\r\n    # controller node\r\n    CONTROLLER_NODE_IP='172.16.1.11'\r\n    # network node\r\n    NETWORK_NODE_IP='172.16.1.13'\r\n    # compute node\r\n    COMPUTE_NODE_IP='172.16.1.12'\r\n    DATA_NIC_COMPUTE='eth1'\r\n    # etc env\r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    DATA_NIC='eth1'\r\n    PUBLIC_NIC='eth0'\r\n    # network_type : gre or vlan\r\n    NETWORK_TYPE='gre'\r\n    \r\n    # quantun env\r\n    INT_NET_GATEWAY='172.24.17.254'\r\n    INT_NET_RANGE='172.24.17.0/24'\r\n    EXT_NET_GATEWAY='10.200.8.1'\r\n    EXT_NET_START='10.200.8.36'\r\n    EXT_NET_END='10.200.8.40'\r\n    EXT_NET_RANGE='10.200.8.0/24'\r\n\r\ncopy directory to network node and compute node.\r\n    \r\n    controller% scp -r openstack_folsom_deploy <network_node_ip>:~/\r\n    controller% scp -r openstack_folsom_deploy <compute_node_ip>:~/\r\n\r\n##### set up network interfaces\r\n\r\nSet up NICs for each comportnent.\r\n\r\nController Node's /etc/network/interfaces\r\n\r\n    auto lo\r\n    iface lo inet loopback\r\n\r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        down ifconfig $IFACE down\r\n        address 10.200.8.11\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.11\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n\r\nNetwork Node's /etc/network/interfaces\r\n\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        up ip link set $IFACE promisc on\r\n        down ip link set $IFACE promisc off\r\n        down ifconfig $IFACE down\r\n        address 10.200.8.21\r\n        netmask 255.255.255.0\r\n        #gateway 10.200.8.1\r\n        # dns-* options are implemented by the resolvconf package, if installed\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth1\r\n        iface eth1 inet static\r\n        address 172.16.2.13\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.13\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n    dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\nCompoute Node's /etc/network/interfaces\r\n\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 172.16.2.12\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.12\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\nDeploy OpenStack for each compornent.\r\n\r\n    controller% sudo ./deploy.sh controller\r\n    network   % sudo ./deploy.sh network\r\n    compute   % sudo ./deploy.sh compute\r\n    \r\nat last, create network on controller node.\r\n\r\n    controller% sudo ./deploy.sh create_network\r\n\r\nYou've done. Please access http://${CONTROLLER_NODE_IP}/horizon via your\r\nbrowser. and create some vm instances. :D\r\n\r\n\r\nUsing floating ip\r\n----\r\n\r\nIf you want to use floating ip, do these operation.\r\n\r\n    % source ~/openstackrc\r\n    % quantum net-list\r\n\t% quantun floatingip-create <ext_net_id>\r\n\t% quantun floatingip-list\r\n\t% quantum port-list\r\n\t% quantum floatingip-associate <floatingip_id> <vm_port_id>\r\n\r\nEnabling to access to VMs\r\n----\r\n\r\nIf you want to access to VMs from anyware, do these operation.\r\n\r\n    % source $HOME/openstackrc\r\n\t% nova secgroup-add-rule default tcp 22 22 0.0.0.0/0\r\n\t% nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0\r\n\t% nova secgroup-list-rules default\r\n\r\nVersions and Changelog\r\n----\r\n\r\n* 2012/11/01 : version 0.1 : First Release.\r\n* 2012/11/08 : version 0.2 : Supported VLAN mode of quantum.\r\n* 2012/12/03 : version 0.3 : Supported 3 nodes constitution (controller, network, compute nodes)\r\n\r\nKnown Issue\r\n----\r\n\r\n* can not access to the metadata server from your virtual machines.\r\n"}