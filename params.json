{"tagline":"OpenStack Folsom bootstrap script for Ubuntu Server 12.04 LTS","google":"UA-30563095-3","body":"OpenStack Folsom Installation Bash Script\r\n=======================\r\n\r\nOpenStack Folsom Installation Bash Script for Ubuntu Server 12.04 or 12.10\r\n\r\nIn Japanese... <https://github.com/jedipunkz/openstack_folsom_deploy/blob/master/README_jp.md>\r\n\r\nAuthor\r\n----\r\nTomokazu Hirai @jedipunkz\r\n\r\nTwitter : <https://twitter.com/jedipunkz>\r\nBlog    : <http://jedipunkz.github.com>\r\n\r\nNotice\r\n----\r\n\r\nThis script was tested ...\r\n\r\n* all in one node with nova-network\r\n* separated nodes (controller, compute x N) with nova-network\r\n* all in one node with quantum\r\n* separated nodes (controller, network, compute x N) with quantum\r\n\r\nso, now I do not support separated nodes for each service (keystone, glance,\r\nnova, etc...). If you want to do this with separated nodes mode, please tell\r\nme or fork it. :D\r\n\r\nMotivation\r\n----\r\n\r\ndevstack is very usefull for me. I am using devstack for understanding\r\nopenstack, especially Quantum ! ;) but when I reboot devstack node, all of\r\nopenstack compornents was not booted. That is not good for me. and I wanted to\r\nuse Ubuntu Cloud Archive packages or Ubuntu Package with 12.10.\r\n\r\nRequire Environment with quanum\r\n----\r\n\r\nYou need 1 or more node(s) with Ubuntu Server 12.04 LTS / 12.10.\r\n\r\nYou should have a machine with 3 NICs. eth0 is public network interface. eth1\r\nis VM (data) network interface, this will be used for communication to other\r\nVMs on other compute nodes. eth2 is completely for management.\r\n\r\nQuantum was designed based on 4 networks, public/data/management/api. This script\r\ndesigned based on 3 networks (if you want 4 networks, you can do it with this).\r\npublic/data/management & api. All of APIs will be listening on management networks\r\ninterface.\r\n\r\nAnd you need a disk device (such as /dev/sda6) for cinder service.\r\n\r\n\r\n\r\nRequire Environment with nova-network\r\n----\r\n\r\nIf you choose nova-network, it is simple. You need 1 NIC only. And you need a\r\ndisk device (such as /dev/sda6) for cinder service.\r\n\r\n\r\nHow to use with quantum\r\n====\r\n\r\nHow to use all in one node with quantum\r\n----\r\n\r\n#### Preconfigured Architecture\r\n\r\n    management segment 172.16.1.0/24\r\n    +---------------------------------------------------------------------------------\r\n    |\r\n    |\r\n    | eth2 172.16.1.11\r\n    +------------+\r\n    |            | eth1\r\n    | all in one | vlan/gre seg = 172.24.17.0/24\r\n    |            | data segment = 172.16.2.0/24\r\n    +------------+ 172.16.2.11\r\n    | eth0 10.200.8.11\r\n    |\r\n    |\r\n    +---------------------------------------------------------------------------------\r\n    |       public segment 10.200.8.0/24\r\n    |\r\n    | 10.200.8.1\r\n    +-----------+\r\n    | GW Router |-> The Internet\r\n    +-----------+\r\n\r\nfig.1 all in one with quantum\r\n\r\n#### OS Install\r\n\r\nPlease make disk partition such as /dev/sda6. Script make this disk partition\r\nto use by Cinder.\r\n\r\n#### Set up network interfaces\r\n\r\nSet up network configuration.\r\n\r\n    % sudo vim /etc/network/interfaces\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        up ip link set $IFACE promisc on\r\n        down ip link set $IFACE promisc off\r\n        down ifconfig $IFACE down\r\n        address 10.200.8.16\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 172.16.2.11\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.11\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n    % sudo /etc/init.d/networking restart\r\n\r\nClone this scripts to your target node.\r\n\r\n    % git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n    % cd openstack_folsom_deploy\r\n\r\n#### Edit parameters\r\n\r\nUpdate these environment in deploy_with_quantum.conf\r\n\r\n    BASE_DIR=`pwd`\r\n    HOST_IP='172.16.1.11'\r\n    HOST_PUB_IP='10.200.8.11'\r\n    \r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    DATA_NIC='eth1'\r\n    PUBLIC_NIC='eth0'\r\n    \r\n    NETWORK_TYPE='gre'\r\n    INT_NET_GATEWAY='172.24.17.254'\r\n    INT_NET_RANGE='172.24.17.0/24'\r\n    EXT_NET_GATEWAY='10.200.8.1'\r\n    EXT_NET_START='10.200.8.36'\r\n    EXT_NET_END='10.200.8.40'\r\n    EXT_NET_RANGE='10.200.8.0/24'\r\n    \r\n    OS_IMAGE_URL=\"https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img\"\r\n    OS_IMAGE_NAME=\"Cirros 0.3.0 x86_64\"\r\n\r\n#### Run script\r\n\r\nRun this script.\r\n\r\n\t% sudo ./deploy.sh allinone quantum # wait some minutes...\r\n    % sudo ./deploy.sh create_network quantum\r\n\r\nThat's all and You've done :D\r\n\r\nNow you can create and boot VMs on Horizon (http://${HOST_IP}/horizon)  with user: demo, pass: demo.\r\n\r\nHow to use 3 nodes (controller, network, compute) mode with quantum\r\n----\r\n\r\n#### Preconfigured Architecture\r\n\r\n    management segment 172.16.1.0/24\r\n    +--------------------------------------------+------------------+-----------------\r\n    |                                            |                  |\r\n    |                                            |                  |\r\n    | eth2 172.16.1.12                           | eth2 172.16.1.13 | eth2 172.24.1.11\r\n    +------------+                               +-----------+      +------------+\r\n    |            | eth1 ------------------- eth1 |           |      |            |\r\n    |  network   | vlan/gre seg = 172.24.17.0/24 |  compute  |      | controller |\r\n    |    node    | data segment = 172.16.2.0/24  |   node    |      |    node    |\r\n    +------------+ 172.16.2.13       172.16.2.12 +-----------+      +------------+\r\n    | eth0 10.200.8.12                                              | eth0 10.200.8.11\r\n    |                                                               |\r\n    |                                                               |\r\n    +--------------------------------------------+------------------+-----------------\r\n    |       public segment 10.200.8.0/24\r\n    |\r\n    | 10.200.8.1\r\n    +-----------+\r\n    | GW Router |-> The Internet\r\n    +-----------+\r\n\r\nfig.2 separated nodes with quantum\r\n\r\n#### OS Install\r\n\r\nPlease make disk partition such as /dev/sda6 on Controller node. Script make this disk partition\r\nto use by Cinder.\r\n\r\n#### get script\r\n\r\nIf you have a plan to build separated by function (controller, network,\r\ncompute nodes), please run deploy.sh with 'controller', 'network', 'compute' option.\r\nParameters of deploy.conf must be same as controller's one.\r\n\r\n    controller% git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n\r\n#### Edit parameters\r\n\r\nUpdate parameters of deploy_with_quantum.conf\r\n\r\n    BASE_DIR=`pwd`\r\n    CONTROLLER_NODE_IP='172.16.1.11'\r\n    CONTROLLER_NODE_PUB_IP='10.200.8.11'\r\n    NETWORK_NODE_IP='172.16.1.12'\r\n    COMPUTE_NODE_IP='172.16.1.13'\r\n    DATA_NIC_COMPUTE='eth1'\r\n    \r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    DATA_NIC='eth1'\r\n    PUBLIC_NIC='eth0'\r\n    \r\n    NETWORK_TYPE='gre'\r\n    INT_NET_GATEWAY='172.24.17.254'\r\n    INT_NET_RANGE='172.24.17.0/24'\r\n    EXT_NET_GATEWAY='10.200.8.1'\r\n    EXT_NET_START='10.200.8.36'\r\n    EXT_NET_END='10.200.8.40'\r\n    EXT_NET_RANGE='10.200.8.0/24'\r\n\r\nOS_IMAGE_URL=\"https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img\"\r\nOS_IMAGE_NAME=\"Cirros 0.3.0 x86_64\"\r\n\r\n\r\n#### copy to other nodes\r\n\r\ncopy directory to network node and compute node.\r\n    \r\n    controller% scp -r openstack_folsom_deploy <network_node_ip>:~/\r\n    controller% scp -r openstack_folsom_deploy <compute_node_ip>:~/\r\n\r\n##### set up network interfaces\r\n\r\nSet up NICs for each comportnent.\r\n\r\nController Node's /etc/network/interfaces\r\n\r\n    auto lo\r\n    iface lo inet loopback\r\n\r\n    auto eth0\r\n    iface eth0 inet static\r\n        address 10.200.8.11\r\n        netmask 255.255.255.0\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.11\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n\r\nNetwork Node's /etc/network/interfaces\r\n\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    auto eth0\r\n    iface eth0 inet static\r\n        up ifconfig $IFACE 0.0.0.0 up\r\n        up ip link set $IFACE promisc on\r\n        down ip link set $IFACE promisc off\r\n        down ifconfig $IFACE down\r\n        address 10.200.8.12\r\n        netmask 255.255.255.0\r\n        #gateway 10.200.8.1\r\n        # dns-* options are implemented by the resolvconf package, if installed\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n        dns-search cpi.ad.jp\r\n    \r\n    auto eth1\r\n        iface eth1 inet static\r\n        address 172.16.2.12\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.12\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n    dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\nCompoute Node's /etc/network/interfaces\r\n\r\n    auto eth1\r\n    iface eth1 inet static\r\n        address 172.16.2.13\r\n        netmask 255.255.255.0\r\n    \r\n    auto eth2\r\n    iface eth2 inet static\r\n        address 172.16.1.13\r\n        netmask 255.255.255.0\r\n        gateway 172.16.1.1\r\n        dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\n#### Run this script\r\n\r\nDeploy OpenStack for each compornent.\r\n\r\n    controller% sudo ./deploy.sh controller quantum\r\n    network   % sudo ./deploy.sh network quantum\r\n    compute   % sudo ./deploy.sh compute quntum\r\n    \r\n#### Create network\r\n\r\nat last, create network on controller node.\r\n\r\n    controller% sudo ./deploy.sh create_network quntum\r\n\r\nYou've done. Please access http://${CONTROLLER_NODE_IP}/horizon via your\r\nbrowser with user: demo, pass: demo.\r\n\r\nHow to use with nova-network\r\n====\r\n\r\nHow to use all in one mode with nova-network\r\n----\r\n\r\n#### Preconfigured Architecure\r\n\r\n                                       +-----------+\r\n    +----------------------------------| GW Router |-> The Internet\r\n    |10.200.8.11                       +-----------+\r\n    |eth0\r\n    +------------+\r\n    |            |\r\n    | all in one |\r\n    |            |\r\n    +------------+\r\n\r\nfig.3 all in one with nova-network\r\n\r\n#### OS Install\r\n\r\nPlease make disk partition such as /dev/sda6. Script make this disk partition\r\nto use by Cinder.\r\n\r\n#### Set up network interfaces\r\n\r\nSet up your network configurations to use static ip address.\r\n\r\n    % sudo vim /etc/network/interfaces\r\n    auto lo\r\n    iface lo inet loopback\r\n    \r\n    auto eth0\r\n    iface eth0 inet static\r\n            address 10.200.8.11\r\n            netmask 255.255.255.0\r\n            gateway 10.200.8.1\r\n            dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\n#### get scripts\r\n\r\nClone this scripts to your target node.\r\n\r\n    % git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n    % cd openstack_folsom_deploy\r\n\r\n#### Edit parameters\r\n\r\nSet up parameters of deploy_with_nova-network.conf\r\n\r\n    BASE_DIR=`pwd`\r\n    HOST_IP='10.200.8.11'\r\n    \r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    \r\n    FIXED_RANGE=\"10.0.0.0/24\"\r\n    FIXED_START_ADDR=\"10.0.0.2\"\r\n    FLOATING_RANGE=\"10.200.8.28/30\"\r\n    NETWORK_SIZE=\"256\"\r\n    \r\n    OS_IMAGE_URL=\"https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img\"\r\n    OS_IMAGE_NAME=\"Cirros 0.3.0 x86_64\"\r\n\r\n#### Run this script\r\n\r\nRun this script with nova-network option.\r\n\r\n    % sudo ./deploy.sh allinone nova-network\r\n\r\n#### Create network\r\n\r\ncreate fixed, floating range networks.\r\n\r\n    % sudo ./deploy.sh create_network nova-network\r\n\r\nThat's done. Now you can access to Horizon with URL (http://${HOST_IP}/horizon).\r\nwith user : demo, pass : demo\r\n\r\nHow to use with 2 or more separated nodes (controller, compute) with nova-network\r\n----\r\n\r\n#### Preconfigured Architecure\r\n\r\n                                       +-----------+\r\n    +---------------+------------------| GW Router |-> The Internet\r\n    |10.200.8.11    |10.200.8.12       +-----------+\r\n    |eth0           |eth0\r\n    +------------+  +------------+\r\n    |            |  |            |\r\n    | controller |  |  compute   |\r\n    |            |  |            |\r\n    +------------+  +------------+\r\n\r\nfig.4 separated nodes with nova-network\r\n\r\n#### OS Install\r\n\r\nPlease make disk partition such as /dev/sda6 on Controller node. Script make\r\nthis disk partition to use by Cinder.\r\n\r\n#### Set up network interfaces\r\n\r\ncontroller:/etc/network/interfaces\r\n\r\n    controller% sudo vim /etc/network/interfaces\r\n    auto lo\r\n    iface lo inet loopback\r\n\r\n    auto eth0\r\n    iface eth0 inet static\r\n            address 10.200.8.11\r\n            netmask 255.255.255.0\r\n            gateway 10.200.8.1\r\n            dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\ncompute:/etc/network/interfaces\r\n\r\n    compute% sudo vim /etc/network/interfaces\r\n    auto lo\r\n    iface lo inet loopback\r\n\r\n    auto eth0\r\n    iface eth0 inet static\r\n            address 10.200.8.12\r\n            netmask 255.255.255.0\r\n            gateway 10.200.8.1\r\n            dns-nameservers 8.8.8.8 8.8.4.4\r\n\r\n#### Clone scripts\r\n\r\nClone this scripts to your target node.\r\n\r\n    controller% git clone https://github.com/jedipunkz/openstack_folsom_deploy.git\r\n    controller% cd openstack_folsom_deploy\r\n\r\n#### Edit Parameters\r\n\r\nSet up parameters of deploy_with_nova-network.conf.\r\n\r\n    BASE_DIR=`pwd`\r\n    CONTROLLER_NODE_IP='10.200.8.11'\r\n    COMPUTE_NODE_IP='10.200.8.12'\r\n    \r\n    MYSQL_PASS='secret'\r\n    CINDER_VOLUME='/dev/sda6'\r\n    \r\n    FIXED_RANGE=\"10.0.0.0/24\"\r\n    FIXED_START_ADDR=\"10.0.0.2\"\r\n    FLOATING_RANGE=\"10.200.8.28/30\"\r\n    NETWORK_SIZE=\"256\"\r\n    \r\n    OS_IMAGE_URL=\"https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img\"\r\n    OS_IMAGE_NAME=\"Cirros 0.3.0 x86_64\"\r\n\r\n#### Copy scripts\r\n\r\nCopy these scripts to compute node.\r\n\r\n    controller% scp -r openstack_folsom_deploy ${COMPUTE_NODE_IP}:~/\r\n\r\n#### Run script\r\n\r\nRun this scripts with nova-network option.\r\n\r\n    controller% sudo ./deploy.sh controller nova-network\r\n    compute   % sudo ./deploy.sh compute nova-network\r\n\r\n#### Create netorks\r\nat last, create network on controller node.\r\n\r\n    controller% sudo ./deploy.sh create_network nova-network\r\n\r\nNow you can access to Horizon with this URL http://${CONTROLLER_NODE_IP}/horizon\r\n\r\nUsing Metadata server with quantum\r\n----\r\n\r\nVM can get some informations from metadata server on controller node.\r\nadd a routing table to VM range network like this.\r\n\r\n    controller% source ~/openstackrc # use admin user\r\n    controller% quantum router-list  # get route-id\r\n    controller% quantum port-list -- --device_id <router_id> --device_owner network:router_gateway # get router I/F addr\r\n    controller% route add -net 172.24.17.0/24 gw <route_if_addr>\r\n\r\nUsing floating ip\r\n----\r\n\r\nIf you want to use floating ip, do these operation.\r\n\r\n    % source ~/openstackrc\r\n    % quantum net-list\r\n\t% quantun floatingip-create <ext_net_id>\r\n\t% quantun floatingip-list\r\n\t% quantum port-list\r\n\t% quantum floatingip-associate <floatingip_id> <vm_port_id>\r\n\r\nVersions and Changelog\r\n----\r\n\r\n* 2012/11/01 : version 0.1 : First Release.\r\n* 2012/11/08 : version 0.2 : Supported VLAN mode of quantum.\r\n* 2012/12/03 : version 0.3 : Supported 3 nodes constitution (controller, network, compute nodes)\r\n* 2012/12/07 : version 0.4 : Fixed a problem that can not access metadata server from VMs.\r\n* 2013/01/09 : version 0.5 : support nova-network\r\n\r\nKnown Issue\r\n----\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Openstack folsom deploy"}